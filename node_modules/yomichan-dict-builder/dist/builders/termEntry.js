"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TermEntry = void 0;
class TermEntry {
    /**
     * Represents a term entry.
     * @param term The term to be added to the dictionary.
     */
    constructor(term) {
        this.detailedDefinitions = [];
        this.term = term;
    }
    /**
     * Sets the term.
     * @param term The term to be changed to.
     */
    setTerm(term) {
        this.term = term;
        return this;
    }
    /**
     * Sets the reading of the term.
     * @param reading The reading of the term.
     */
    setReading(reading) {
        this.reading = reading;
        return this;
    }
    /**
     * Sets the definition tags of the term.
     * @param definitionTags The definition tags of the term.
     */
    setDefinitionTags(definitionTags) {
        this.definitionTags = definitionTags;
        return this;
    }
    /**
     * Sets the deinflectors of the term.
     * @param deinflectors The deinflectors of the term.
     */
    setDeinflectors(deinflectors) {
        this.deinflectors = deinflectors;
        return this;
    }
    /**
     * Sets the popularity of the term.
     * @param popularity The popularity of the term.
     */
    setPopularity(popularity) {
        this.popularity = popularity;
        return this;
    }
    /**
     * Adds a definition to the term.
     * @param definition The definition to add to the term.
     */
    addDetailedDefinition(definition) {
        this.detailedDefinitions.push(definition);
        return this;
    }
    /**
     * Adds multiple definitions to the term.
     * @param definitions The definitions to add to the term.
     */
    addDetailedDefinitions(definitions) {
        this.detailedDefinitions.push(...definitions);
        return this;
    }
    /**
     * Sets the sequence number of the term.
     * @param sequenceNumber The sequence number of the term.
     */
    setSequenceNumber(sequenceNumber) {
        this.sequenceNumber = sequenceNumber;
        return this;
    }
    /**
     * Sets the term tags of the term.
     * @param termTags The term tags of the term.
     */
    setTermTags(termTags) {
        this.termTags = termTags;
        return this;
    }
    /**
     * Builds the term entry.
     */
    build() {
        var _a, _b, _c, _d, _e;
        if (this.reading === undefined) {
            throw new Error('Reading was never set.');
        }
        this.definitionTags = (_a = this.definitionTags) !== null && _a !== void 0 ? _a : '';
        this.deinflectors = (_b = this.deinflectors) !== null && _b !== void 0 ? _b : '';
        this.popularity = (_c = this.popularity) !== null && _c !== void 0 ? _c : 0;
        this.sequenceNumber = (_d = this.sequenceNumber) !== null && _d !== void 0 ? _d : 0;
        this.termTags = (_e = this.termTags) !== null && _e !== void 0 ? _e : '';
        return [
            this.term,
            this.reading,
            this.definitionTags,
            this.deinflectors,
            this.popularity,
            this.detailedDefinitions,
            this.sequenceNumber,
            this.termTags,
        ];
    }
}
exports.TermEntry = TermEntry;
